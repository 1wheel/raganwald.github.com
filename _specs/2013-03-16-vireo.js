// Generated by CoffeeScript 1.6.1
(function() {
  var FlockingBird, any, _;

  any = (_ = require('underscore')).any;

  FlockingBird = (function() {

    function FlockingBird(greater, lesser) {
      this.greater = greater != null ? greater : [];
      this.lesser = lesser != null ? lesser : [];
    }

    FlockingBird.prototype.standsAgainst = function(rival) {
      var case1, case2, courtingBird;
      courtingBird = this;
      case1 = any(this.greater, function(gb) {
        return rival.standsAgaint(gb);
      });
      case2 = any(rival.lesser, function(lb) {
        return lb.standsAgainst(courtingBird);
      });
      return (!case1) && (!case2);
    };

    FlockingBird.prototype.confused = function() {
      var case1a, case1b, case2,
        _this = this;
      case1a = any(this.lesser, function(lb) {
        return lb.confused();
      });
      case1b = any(this.greater, function(gb) {
        return gb.confused();
      });
      case2 = any(this.lesser, function(lb) {
        return any(_this.greater, function(gb) {
          return lb.standsAgainst(gb);
        });
      });
      return case1a || case1b || case2;
    };

    return FlockingBird;

  })();

  describe("Lazy Mayzie", function() {
    var Mayzie;
    Mayzie = new FlockingBird();
    return it("should not be confused", function() {
      return expect(Mayzie.confused()).toEqual(false);
    });
  });

}).call(this);
